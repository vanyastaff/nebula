[package]
name = "nebula-memory"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
keywords.workspace = true
authors.workspace = true
description = "High-performance memory management for Nebula workflow automation"
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
readme = "README.md"
categories = ["memory-management", "data-structures", "caching", "no-std"]

[features]
# Default: Just std library support
default = ["std"]

# Core runtime
std = ["once_cell", "parking_lot", "libc", "chrono"]
alloc = []

# Major feature groups (простые, понятные)
pool = ["std", "crossbeam-queue"]
arena = ["std"]
cache = ["std", "hashbrown"]
stats = ["std"]
budget = ["std"]
streaming = ["alloc"]
logging = ["std", "nebula-log"]

# Platform optimization
numa-aware = ["libc"]
linux-optimizations = ["libc"]

# Development/debugging (объединены)
monitoring = ["std", "stats"]
profiling = ["std", "stats"]
adaptive = ["stats"]

# Optional
compression = ["lz4_flex"]
async = ["std", "tokio", "futures-core", "futures"]
nightly = []
backtrace-feature = ["std", "backtrace"]

# Convenience sets (для удобства пользователей)
full = ["std", "pool", "arena", "cache", "stats", "budget", "streaming", "monitoring", "logging"]

[dependencies]
# Collections
crossbeam-queue = { version = "0.3", optional = true, default-features = false }
hashbrown = { version = "0.15", optional = true, default-features = false }

# Core dependencies
cfg-if = "1.0"
dyn-clone = "1.0"
spin = "0.9"
chrono = { version = "0.4", optional = true, default-features = false, features = ["clock"] }

# No-std collections
heapless = "0.8"

# Platform-specific
libc = { version = "0.2", optional = true }

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["memoryapi", "sysinfoapi", "libloaderapi"] }

# Linux NUMA support is available through libc

# Synchronization
once_cell = { version = "1.21", optional = true }
parking_lot = { version = "0.12", optional = true }

# Async runtime (optional)
tokio = { version = "1.0", optional = true, default-features = false, features = ["sync", "time"] }
futures-core = { version = "0.3", optional = true, default-features = false }
futures = { version = "0.3", optional = true, default-features = false, features = ["alloc"] }

# Compression (optional)
lz4_flex = { version = "0.11", optional = true, default-features = false }

# Debug tools (optional)
backtrace = { version = "0.3", optional = true }
rand = { version = "0.8", optional = true }

# Internal crates
nebula-core = { path = "..\\nebula-core" }
nebula-error = { path = "..\\nebula-error" }
nebula-log = { path = "..\\nebula-log", optional = true }
nebula-system = { path = "..\\nebula-system" }

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.6"
rand = "0.8"


[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
targets = [
    "x86_64-unknown-linux-gnu",
    "x86_64-apple-darwin",
    "x86_64-pc-windows-msvc"
]

[lints]
workspace = true