[package]
name = "nebula-value"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
readme = "README.md"
keywords = ["workflow", "value", "types", "serde"]
categories = ["data-structures", "encoding"]
description = "Value type system for Nebula workflow engine"

[dependencies]
# From workspace

nebula-error = { path = "../nebula-error" }
thiserror = "2"
rayon = { workspace = true, optional = true }

# For binary data handling
base64 = { version = "0.22.1", optional = true }
bytes = {version = "1.10.1", features = ["serde"]}
rand = {version = "0.9.2"}

# Optional features
chrono = { workspace = true,  optional = true }
regex = { version = "1.11.1", optional = true}
serde = { workspace = true, optional = true }
serde_bytes = {version = "0.11.17", optional = true}
serde_regex = {version = "1.1.0", optional = true }
serde_json = { workspace = true, optional = true, features = [] }
indexmap = { version = "2.10", features = ["serde"], optional = true }



[features]
default = ["std"]
std = []
serde = ["dep:serde", "dep:serde_regex", "dep:serde_bytes", "dep:serde_json", "bytes/serde", "indexmap?/serde", "chrono?/serde"]
rayon = ["dep:rayon"]
base64 = ["dep:base64"]
indexmap = ["dep:indexmap"]
pattern = ["dep:regex"]
chrono = ["dep:chrono"]
validation = []
decimal = []

[dev-dependencies]
serde = { workspace = true }
serde_json = { workspace = true }
serde_bytes = {version = "0.11.17"}
serde_regex = {version = "1.1.0"}
indexmap = { version = "2.5", features = ["serde"] }

# For testing
criterion = { version = "0.7", features = ["html_reports"] }
proptest = "1.5"


[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]