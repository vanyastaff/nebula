[package]
name = "nebula-validator"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
description = "Input validation framework for Nebula workflow engine"
keywords.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true

[dependencies]
# Error handling
thiserror = { workspace = true }
anyhow = "1.0"

# Serialization
serde = { workspace = true, features = ["derive"] }
serde_json = "1.0"

# Async traits
async-trait = "0.1"

# Collections and concurrency
dashmap = "5.5"
tokio = { workspace = true, features = ["sync", "time"] }
futures = "0.3"

# Resilience patterns
nebula-resilience = { path = "../nebula-resilience" }

# Time handling
chrono = { workspace = true, features = ["serde"] }

# Logging
tracing = { workspace = true }

# Regular expressions
regex = "1.10"

# UUID validation
uuid = { workspace = true, features = ["v4", "serde"] }

# Email validation
email-validator = "0.2"

# URL validation
url = "2.4"

# IP address validation
std-net = "0.1"

# Base64 validation
base64 = "0.21"

# Random number generation (for cache eviction)
rand = "0.8"

[features]
default = ["full"]
full = ["async", "caching", "registry", "performance"]
async = ["tokio/full"]
caching = []
registry = []
performance = []

[dev-dependencies]
# Testing
tokio = { workspace = true, features = ["full"] }
tokio-test = "0.4"
pretty_assertions = "1.4"
