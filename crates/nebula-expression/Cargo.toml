[package]
name = "nebula-expression"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
license.workspace = true
description = "Powerful expression language for Nebula workflow automation, compatible with n8n syntax"
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
keywords = ["expression", "template", "workflow", "n8n", "automation"]
categories = ["template-engine", "parser-implementations"]

[dependencies]
# Nebula internal crates
nebula-core = { path = "../nebula-core" }
nebula-error = { path = "../nebula-error" }
nebula-log = { path = "../nebula-log" }
nebula-memory = { path = "../nebula-memory", features = ["cache"] }
nebula-value = { path = "../nebula-value", features = ["temporal", "serde"] }

# External dependencies
serde = { workspace = true }
serde_json = "1.0"
regex = { version = "1.11", optional = true }
uuid = { workspace = true, features = ["v4"], optional = true }
chrono = { workspace = true, optional = true }
parking_lot = "0.12"
once_cell = "1.19"

[dev-dependencies]
pretty_assertions = { workspace = true }
criterion = { version = "0.5", features = ["html_reports"] }

[[bench]]
name = "baseline"
harness = false

[features]
default = ["cache", "regex", "datetime", "uuid"]
cache = ["nebula-memory/cache"]
regex = ["dep:regex"]
datetime = ["dep:chrono", "nebula-value/temporal"]
uuid = ["dep:uuid"]
# Full feature set
full = ["cache", "regex", "datetime", "uuid"]
